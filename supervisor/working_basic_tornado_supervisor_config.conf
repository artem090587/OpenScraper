
### ------------------------------- ###
### WORKING BASIC SUPERVISOR CONFIG ###
### ------------------------------- ###


[group:tornadoes]
programs=openscraper

[program:openscraper]
command=python main.py --mode production
directory=/home/jpy/app_os/openscraper
user=jpy
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/tornado.log
loglevel=info


# [group:tornadoes]
# programs=openscraper-8000, openscraper-8001

# [program:openscraper-8000]
# command=python main.py --port=8000
# directory=/home/jpy/app_os/openscraper
# user=jpy
# autostart=true
# autorestart=true
# redirect_stderr=true
# stdout_logfile=/var/log/tornado.log
# loglevel=info

# [program:openscraper-8001]
# command=python main.py --port=8001
# directory=/home/jpy/app_os/openscraper
# user=jpy
# autostart=true
# autorestart=true
# redirect_stderr=true
# stdout_logfile=/var/log/tornado.log
# loglevel=info





# [group:tornadoes]
# programs=openscraper

# [program:openscraper]
# command=python /var/www/app_os/openscraper/main.py 
# directory=/var/www
# user=jpy
# autorestart=true
# redirect_stderr=true
# stdout_logfile=/var/log/tornado.log
# loglevel=info



# ##################################


# [unix_http_server]
# file=/tmp/supervisor.sock                       ; path to your socket file

# [supervisord]
# logfile=/var/log/supervisord/supervisord.log    ; supervisord log file
# logfile_maxbytes=50MB                           ; maximum size of logfile before rotation
# logfile_backups=10                              ; number of backed up logfiles
# loglevel=error                                  ; info, debug, warn, trace
# pidfile=/var/run/supervisord.pid                ; pidfile location
# nodaemon=false                                  ; run supervisord as a daemon
# minfds=1024                                     ; number of startup file descriptors
# minprocs=200                                    ; number of process descriptors
# user=root                                       ; default user
# childlogdir=/var/log/supervisord/               ; where child log files will live

# [rpcinterface:supervisor]
# supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# [supervisorctl]
# serverurl=unix:///tmp/supervisor.sock         ; use a unix:// URL  for a unix socket

# ; This is where you run individual Tornado instances.
# ; We run four; one per processor core.
# ; In development, we ran as many as four per core with no issues.
# ; If you're looking to minimize cpu load, run fewer processes.
# ; BTW, Tornado processes are single threaded.
# ; To take advantage of multiple cores, you'll need multiple processes.

# [program:tornado-8000]
# command=/app_os/openscraper/main.py 
# stderr_logfile = /var/log/supervisord/tornado-stderr.log
# stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8001]
# # command=/path/to/app.py --port=8001
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8002]
# # command=/path/to/app.py --port=8002
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8003]
# # command=/path/to/app.py --port=8003
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log



# ##################################

# # [include]
# # files = *.supervisor

# # [supervisord]

# # [supervisorctl]
# # serverurl = unix://supervisord.sock

# # [unix_http_server]
# # file = supervisord.sock

# # [rpcinterface:supervisor]
# # supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# # [program:main]
# # process_name = main-%(process_num)s
# # command = python /srv/www/url/tornado/main.py
# # --port=%(process_num)s
# # --log_file_prefix=%(here)s/logs/%(program_name)s-%(process_num)s.log
# # numprocs = 1
# # numprocs_start = 8000

# ################################


# [program:openscraper] 
# process_name=OPENSCRAPER%(process_num)s
# directory=/var/www/app_os/openscraper 
# command=python main.py --PORT=%(process_num)s
# startsecs=2
# user=jpy
# # stdout_logfile=/var/log/openscraper/out-%(process_num)s.log
# # stderr_logfile=/var/log/openscraper/err-%(process_num)s.log
# redirect_stderr=true
# stdout_logfile=/var/log/torna
# numprocs=1
# numprocs_start=14000



# ################################
# [unix_http_server]
# file=/tmp/supervisor.sock                       ; path to your socket file

# [supervisord]
# logfile=/var/log/supervisord/supervisord.log    ; supervisord log file
# logfile_maxbytes=50MB                           ; maximum size of logfile before rotation
# logfile_backups=10                              ; number of backed up logfiles
# loglevel=error                                  ; info, debug, warn, trace
# pidfile=/var/run/supervisord.pid                ; pidfile location
# nodaemon=false                                  ; run supervisord as a daemon
# minfds=1024                                     ; number of startup file descriptors
# minprocs=200                                    ; number of process descriptors
# user=jpy                                       ; default user
# childlogdir=/var/log/supervisord/               ; where child log files will live

# [rpcinterface:supervisor]
# supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# [supervisorctl]
# serverurl=unix:///tmp/supervisor.sock         ; use a unix:// URL  for a unix socket

# ; This is where you run individual Tornado instances.
# ; We run four; one per processor core.
# ; In development, we ran as many as four per core with no issues.
# ; If you're looking to minimize cpu load, run fewer processes.
# ; BTW, Tornado processes are single threaded.
# ; To take advantage of multiple cores, you'll need multiple processes.

# [program:tornado-8000]
# command=/app_os/openscraper/main.py --port=8000
# stderr_logfile = /var/log/supervisord/tornado-stderr.log
# stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8001]
# # command=/path/to/app.py --port=8001
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8002]
# # command=/path/to/app.py --port=8002
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log

# # [program:tornado-8003]
# # command=/path/to/app.py --port=8003
# # stderr_logfile = /var/log/supervisord/tornado-stderr.log
# # stdout_logfile = /var/log/supervisord/tornado-stdout.log



# ################################


# # [program:openscraper]
# # command=/home/urban/bin/gunicorn_start
# # user=urban
# # autostart=true
# # autorestart=true
# # redirect_stderr=true
# # stdout_logfile=/home/urban/logs/gunicorn-error.log


# # [program:openscraper] # <-----prgoram name: mytornado
# # command=python /home/feifan/Desktop/tor.py 888%(process_num)01d # <----you'd better provide a port parameter in application entrance.
# # process_name=%(program_name)s_%(process_num)01d # <---progress name format, "mytornado_8880" and "mytornado_8881"
# # redirect_stderr=true
# # stdout_logfile=/tmp/openscraper.log
# # numprocs=1 # <---- how many instances